* Zig-cc
Scripts help you use Zig to cross compile Go/Rust projects.
* Why this
In most cases, we can use following command to use Zig for compile
#+begin_src bash
CC='zig cc' CXX='zig c++' ...
#+end_src
However in real world, there are many issues this way, such as:
- [[https://github.com/ziglang/zig/issues/4911][zig cc: parse -target and -mcpu/-march/-mtune flags according to clang #4911]]
- [[https://gist.github.com/kassane/446889ea1dd5ff07048d921f2b755e78][Targets compare: Rust to Zig]]
- [[https://github.com/search?q=repo%3Aziglang%2Fzig+unsupported+linker+arg%3A&type=issues][unsupported linker arg]]
So this project was born, it will
- Convert target between Zig and Rust/Go
- Ignore link args when =zig cc= throw errors, hopefully this will make compile successfully.
* Install
Download [[file:zigcc][zigcc]] file, give it executable permission, and create a soft link =zigcxx= to it.
#+begin_src bash
curl -Lo zigcc https://github.com/jiacai2050/zig-cc/raw/main/zigcc
chmod +x zigcc
ln -s zigcc zigcxx
#+end_src

Then use like before
#+begin_src bash
CC=zigcc CXX=zigcxx ...
#+end_src

When compile Rust project, linker should be set in =.cargo/config=, like
#+begin_src conf
# cat ~/.cargo/config
[target.x86_64-unknown-linux-musl]
linker = "zigcc"

[target.x86_64-unknown-linux-gnu]
linker = "zigcc"
#+end_src
