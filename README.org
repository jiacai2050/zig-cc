* Zig-cc
[[https://github.com/jiacai2050/zig-cc/actions/workflows/CI.yml][https://github.com/jiacai2050/zig-cc/actions/workflows/CI.yml/badge.svg]]

A util script that aims to ease use =zig cc= to compile C/C++/Rust/Go programs.

* Why
In most cases, we can use following command to use Zig for compile
#+begin_src bash
CC='zig cc' CXX='zig c++' ...
#+end_src
However in real world, there are many issues this way, such as:
- [[https://github.com/ziglang/zig/issues/4911][zig cc: parse -target and -mcpu/-march/-mtune flags according to clang #4911]]
- [[https://gist.github.com/kassane/446889ea1dd5ff07048d921f2b755e78][Targets compare: Rust to Zig]]
- [[https://github.com/search?q=repo%3Aziglang%2Fzig+unsupported+linker+arg%3A&type=issues][unsupported linker arg]]
- [[https://www.reddit.com/r/rust/comments/q866qx/rust_zig_cc_crt_conflict/][Rust + `zig cc` CRT conflict. : rust]]
So this project was born, it will
- Convert target between Zig and Rust/Go
- Ignore link args when =zig cc= throw errors, hopefully this will make compile successfully, WIP.
* Install
Download [[file:zigcc][zigcc]] file, give it executable permission, and create two soft links =zigcxx=, =zigcargo= to it.
#+begin_src bash
curl -Lo zigcc https://github.com/jiacai2050/zig-cc/raw/main/zigcc
chmod +x zigcc
ln -s zigcc zigcxx
ln -s zigcc zigcargo
#+end_src

Then use like this
#+begin_src bash
CC=zigcc CXX=zigcxx ...
#+end_src

=zigcargo= can used to replace =cargo=, it will automatically set
- =CC= =CARGO_TARGET_<triple>_LINKER= to =zigcc=
- =CXX= to =zigcxx=

* Use in GitHub Action
Adding a step to your workflow like this:
#+begin_src yaml
    - uses: jiacai2050/zigcc@v1
      with:
        zig-version: master
#+end_src
Then you can invoke =zigcc= =zigcxx= =zigcargo= in following steps.

* Config
There some are env variable to config zigcc:
- =ZIGCC_FLAGS=, space separated flags, pass to zig cc. An example is set this to =-fno-sanitize=undefined= to disable sanitize since they may break your programs. See [[https://nathancraddock.com/blog/zig-cc-undefined-behavior/][Catching undefined behavior with zig cc]]
- =ZIGCC_BLACKLIST_FLAGS=, space separated flags, used to filter flags =zig cc= don't support, such as =-Wl,-dylib= otherwise you could see errors below
  #+begin_src bash
  = note: error: unsupported linker arg: -dylib
  #+end_src
- =ZIGCC_LOG= Set to =1= enable verbose logs.
